---
title: "06 location cleaning.R"
format: html
---

# setup

```{r}
library(tidyverse)
library(dplyr)
library(readxl)
library(readr)
library(writexl)
```


# load data
```{r}
df_c <- read_csv("data/Cotton heatress Longitde and Latitude.csv")
df_q <- read_csv("output/cleaned/cleanedQuality/cleaned.csv")

#df_c <- read_csv("../data/Cotton heatress Longitde and Latitude.csv")
#df_q <- read_csv("../output/cleaned/cleanedQuality/cleaned.csv")

```

# Wrangling
```{r}
# cleaning df_c (coordinates data) #####################
df_c$Breeder <- as.numeric(df_c$Breeder)
df_c$Samples <- as.numeric(df_c$Samples)
df_c$loccode <- as.numeric(df_c$loccode)

names(df_c)[names(df_c) == 'Breeder'] <- 'breeder'
names(df_c)[names(df_c) == 'Samples'] <- 'sample'
names(df_c)[names(df_c) == 'Var'] <- 'var'

# change years to match other file 
replacements <- c(0, 1, 2, 4, 6, 10:19)
new_values <- c(2000, 2001, 2002, 2004, 2006, 2010:2019)
for (i in seq_along(replacements)) {
  df_c$year <- ifelse(df_c$year == replacements[i], new_values[i], df_c$year)
} 
df_c <- df_c %>%
  # Fill in NA location and coordinates with matching loccodes. 
  group_by(loc) %>%
  mutate(
#    loc = ifelse(is.na(loc), first(loc[!is.na(loc)]), loc),
    Latitude = ifelse(is.na(Latitude), first(Latitude[!is.na(Latitude)]), Latitude),
    Longitude = ifelse(is.na(Longitude), first(Longitude[!is.na(Longitude)]), Longitude)
  ) %>%
  ungroup()

# drop  values with ? in loc and 0 for lat and long (these loccodes do not match with anything)
df_c <- df_c %>%
  filter(!(loc == "?" & Latitude == "0" & Longitude == "0" )) %>%
  filter(!(year == 95 & loccode == 90 & is.na(loc) & is.na(Latitude) & is.na(Longitude))) 

  # lat for auburn in some years is wrong (is the long)
  df_c$Latitude <- ifelse(df_c$Latitude=="85.4808° W", "32.6099° N", df_c$Latitude)

# standardizing years
df_c$year <- ifelse(nchar(df_c$year) == 2, as.numeric(paste0("19", df_c$year)), df_c$year)

# clean df_q (quality data) ######################
# loccode for quality Thrall, TX is wrong should be 181
df_q$loccode <- ifelse(df_q$loccode == 182, 181, df_q$loccode)
df_q$loccode <- ifelse(df_q$loccode==4, 43, df_q$loccode)

# standardizing years 
df_q$yr <- ifelse(nchar(df_q$yr) == 2, as.numeric(paste0("19", df_q$yr)), df_q$yr)

```

```{r}
# to show distinct location and loccodes / not necessary to do
df_q %>%
  dplyr::select(loc, loccode) %>% 
  arrange(loccode) %>% 
  distinct() %>%
  View()

df_c %>% 
  dplyr::select(loc, loccode) %>%
  arrange(loccode) %>%
  distinct() 
```


```{r df_c_w}
# Case when for coordinates
df_c_w <- df_c %>%
  mutate(irrigation = case_when(
    grepl("iir|irri|IRRI", loc) ~ "irrigated",
    grepl("dry", loc) ~ "dryland",
    T ~ NA
  )) %>%
  mutate(loc_fixed = case_when(
    grepl("Altus|ALTUS",loc) ~ "Altus, OK",
    grepl("Artesia", loc) ~ "Artesia, NM",
    grepl("Phenix", loc) ~ "Phoenix, AZ",
    grepl("EL Paso|El Paso", loc) ~ "El Paso, TX",
    grepl("Pecos", loc) ~ "Pecos, TX",
    grepl("lubbock|LUB|Lubbock|lubbock", loc) ~ "Lubbock, TX",
    grepl("Chillicothe|hillicothe|Chillicoth", loc) ~ "Chillicothe, TX",
    grepl("College", loc) ~ "College Station, TX",
    grepl("Weslaco|Weslago" ,loc) ~ "Weslaco, TX",
    grepl("Bosserier|Bossier", loc) ~ "Bossier City, LA",
    grepl("San Joseph, LA", loc) ~ "Saint Joseph, LA",
    grepl("Saint Joseph, TX", loc) ~ "Saint Jo, TX",
    grepl("stoneville|Stonvelle|Stoneville,MS|Stoneville", loc) ~ "Stoneville, MS",
    grepl("Clarkedale|Clarkdale", loc) ~ "Clarkdale, LA",
    grepl("Alburn|Aubur|Auburn", loc) ~ "Auburn, AL",
    grepl("Forence|Florence", loc) ~ "Florence, SC",
    grepl("Ricky|Rocky mount", loc) ~ "Rocky Mount, NC",
    grepl("Chickasa|Chickasha", loc) ~ "Chickasha, OK",
    grepl("Artesia, NM", loc) ~ "Artesia, NM",
    grepl("Maricopa|Maricopa, AX", loc) ~ "Maricopa, AZ",
    grepl("Starkeville|starkville|Starkville", loc) ~ "Starkville, MS",
    grepl("Beeville|Beeville, OK", loc) ~ "Beeville, TX",
    grepl("Portageville, MS|Portegeville|Portageville|Porgetageville, MO", loc) ~ "Portageville, MO",
    grepl("Lamesa, NM" ,loc) ~ "La Mesa, NM",
    grepl("Bell Mina|Belle Mina", loc) ~ "Belle Mina, AL",
    grepl("Rohwer, AZ", loc) ~ "Rohwer, AR",
    grepl("Five Points", loc) ~ "Five Points, CA",
    grepl("Lemore", loc) ~ "Lemoore, CA",
    grepl("W field station, CA|w side field station, CA|W. Side Field Station, CA|W side field station, CA|W Side Field Statsion,CA", loc) ~ "W Side Field Station, CA", 
    grepl("Griffin", loc) ~ "Griffin, GA",
    grepl("Las Cruces|Las cruces", loc) ~ "Las Cruces, NM",
    grepl("Lamesa", loc) ~ "Lamesa, TX",
    grepl("Suffolk, CA|Suffolk, VA ??", loc) ~ "Suffolk, VA",
    grepl("Ames Plantatino", loc) ~ "Ames Plantaion, TN",
    grepl("Yuma, AZ??", loc) ~ "Yuma, AZ",
    grepl("Dallas", loc) ~ "Dallas, TX",
    grepl("Thrall", loc) ~ "Thrall, TX",
    grepl("Kerser|Keiser", loc) ~ "Keiser, AR",
    grepl("Tipton, GA|tiptop, OK", loc) ~ "Tipton, OK",
    grepl("Tipton", loc) ~ "Tipton, GA",
    grepl("Commerce", loc) ~ "Commerce, TX",
    grepl("C Christi|C Christi-D|Corpus Christi", loc) ~ "Corpus Christi, TX",
    grepl("maricopa", loc) ~ "Maricopa, AZ",
    grepl("knoxville ???", loc) ~ "Knoxville, TN",
    grepl("Halfway", loc) ~ "Halfway, TX",
    grepl("Mangum", loc) ~ "Mangum, OK",
    grepl("Tranquiliity, CA", loc) ~ "Tranquility, CA",
    grepl("Palmer, AZ", loc) ~ "Palmer, AK",
    T ~ loc
  )) %>%
  mutate(loc = loc_fixed) %>%
  select(-loc_fixed) %>%
  distinct(year, loc, Latitude, Longitude) %>%
  # fixing Chillicothe TX coordinates
  mutate(Longitude = case_when(
    loc == "Chillicothe, TX" ~ "99.5168° W",
    T ~ Longitude
  ))


df_c_w # 1,171 × 4
```

```{r df_q_w}
# Case when for quality data
df_q_w <- df_q %>% 
  mutate(irrigation = case_when(
    grepl("iir|irri|IRRI", loc) ~ "irrigated",
    grepl("dry", loc) ~ "dryland",
    T ~ NA
  )) %>%
  mutate(loc_fixed = case_when(
    grepl("ALTUS|Altus", loc) ~ "Altus, OK",
    grepl("Artesia", loc) ~ "Artesia, NM",
    grepl("Auburn", loc) ~ "Auburn, AL",
    grepl("BELLA MINA|Belle Mina", loc) ~ "Belle Mina, AL",
    grepl("Beeville", loc) ~ "Beeville, TX",
    grepl("Bosserier|Bossier Cith|Bossier City", loc) ~ "Bossier City, LA",
    grepl("C CHRISTI-D|Corpus Christi", loc) ~ "Corpus Christi, TX",
    grepl("CHILLOCOTHE|Chillicothe|hillicothe", loc) ~ "Chillicothe, TX",
    grepl("Chickasa|Chickasha", loc) ~ "Chickasha, OK",
    grepl("COMMERCE|Commerce", loc) ~ "Commerce, TX",
    grepl("Clarkedale, LA|Clarkedale, AR|Clarkdale, AR", loc ) ~ "Clarkdale, LA",
    grepl("College|College station|COLL STA|COLL STA-1|COLL STA-I", loc) ~ "College Station, TX",
    grepl("Dallas", loc) ~ "Dallas, TX",
    grepl("EL Paso|El Paso", loc) ~ "El Paso, TX",
    grepl("FIVE POINTS|Five Points", loc) ~ "Five Points, CA",
    grepl("FLORENCE|Florence", loc) ~ "Florence, SC",
    grepl("Fort Cobb", loc) ~ "Fort Cobb, OK",
    grepl("GRIFFIN, GA|Griffin", loc) ~ "Griffin, GA",
    grepl("Halfway", loc) ~ "Halfway, TX",
    grepl("JACKSON|Jackson", loc) ~ "Jackson, TN",
    grepl("Keiser|Keiser|Kerser|KEISER", loc) ~ "Keiser, AR",
    grepl("LAMESA-D|LEMESA|Lamesa", loc) ~ "Lamesa, TX",
    grepl("LAS CRUCES|Las Cruces|Las cruces", loc) ~ "Las Cruces, NM",
    grepl("LUB|LUBBOCK|Lubbock|lubbock",loc) ~ "Lubbock, TX",
    grepl("Lemore", loc) ~ "Lemoore, CA",
    grepl("MARICOPA|Maricopa", loc) ~ "Maricopa, AZ",
    grepl("Mangum", loc)  ~ "Mangum, OK",
    grepl("Marama", loc) ~ "Marana, AZ",
    grepl("Pecos", loc) ~ "Pecos, TX",
    grepl("Fresno County", loc) ~ "Fresno County, CA",
    grepl("Kings County", loc) ~ "Kings County, CA",
    grepl("Portgeville|Portegeville|PORTAG|Portageville|Porgetageville, MO", loc) ~ "Portageville, MO",
    grepl("Rocky mount|ROCKY MT", loc) ~ "Rocky Mount, NC",
    grepl("Rowher|Rohwer", loc) ~ "Rohwer, AR",
    grepl("Saint Joseph, TX", loc) ~ "Saint Jo, TX",
    grepl("Saint Joseph|ST. JOE|Sant Joseph, LA|Saint, Joseph, LA|Sain Joseph, LA", loc) ~ "Saint Joseph, LA",
    grepl("Stoneville|STONEVILLE|stoneville|ST'VILLE", loc) ~ "Stoneville, MS",
    grepl("Suffolk|SUFFOLK", loc) ~ "Suffolk, VA",
    grepl("starkville|STARKVILLE|Starkville", loc) ~ "Starkville, MS",
    grepl("THRALL|Thrall", loc) ~ "Thrall, TX",
    grepl("TIPTON-D", loc) ~ "Tipton, OK",
    grepl("Univeristy park|University park, NM", loc) ~ "University Park, NM",
    grepl("W field station, CA|w side field station, CA|W. Side Field Station, CA|W side field station, CA|W Side Field Statsion,CA|W Side field Station, CA", loc) ~ "W Side Field Station, CA",
    grepl("WESLACO|Weslaco|Weslago|Weslago", loc) ~ "Weslaco, TX",
    grepl("knoxville", loc)  ~ "Knoxville, TN",
    grepl("yuma", loc) ~ "Yuma, AZ",
    grepl("Palmer, AZ", loc) ~ "Palmer, AK",
    T ~ loc
  )) %>%
  mutate(loc = loc_fixed) %>%
  select(-loc_fixed) %>%
  rename(year = yr)


df_q_w # 38,956 × 62
```

Joining df_c and df_q 
```{r join_fixed}
# joining df_c and df_q
# should have same number of rows as the first df but more columns
join <-  df_q_w %>% 
  left_join(df_c_w) %>% 
  arrange(year)

# fill in missing coordinates (this happens when coordinates file does not have information on a location for a specific year)
join_na <- join %>%
  group_by(loc) %>%
  mutate(
    Latitude = ifelse(is.na(Latitude), first(Latitude[!is.na(Latitude)]), Latitude),
    Longitude = ifelse(is.na(Longitude), first(Longitude[!is.na(Longitude)]), Longitude)
  ) %>%
  ungroup()

join_fixed <- join_na %>%
  mutate(  
    Latitude = ifelse(loc == "Tipton, OK" & loccode == 191 & is.na(Latitude), "31.4505° N", Latitude),
    Longitude = ifelse(loc == "Tipton, OK" & loccode == 191 & is.na(Longitude), "83.5085° W", Longitude), 
  ) %>% 
  mutate(
    Latitude = ifelse(loc == "Maricopa, AZ" & loccode == 175 & is.na(Latitude), "33.0581° N", Latitude),
    Longitude = ifelse(loc == "Maricopa, AZ" & loccode == 175 & is.na(Longitude), "112.0476° W", Longitude), 
  ) %>%
  mutate( # Kings county is new in quality 2020 so manually input 
    Latitude = ifelse(loc == "Kings County, CA" & loccode == 2 & is.na(Latitude), "36.0988° N", Latitude),
    Longitude = ifelse(loc == "Kings County, CA" & loccode == 2 & is.na(Longitude), "119.8815° W", Longitude), 
  ) %>% 
   mutate( # Kings county is new in quality 2020 so manually input 
    Latitude = ifelse(loc == "Fresno County, CA" & loccode == 3 & is.na(Latitude), "36.9859° N", Latitude),
    Longitude = ifelse(loc == "Fresno County, CA" & loccode == 3 & is.na(Longitude), "119.2321° W", Longitude), 
  )
# check for distince coordinates
join_fixed %>%
  distinct(year, loc, Latitude, Longitude) %>%
  arrange(loc) %>%
  group_by(year, loc) %>%
  tally() %>%
  filter(n > 1)
```

wrangling join_fixed (df_q_w + df_c_w)
```{r final_joined}
nona_joined <- join_fixed %>%
  filter(!is.na(year)) %>%
  filter(!is.na(loc))

final_joined <- nona_joined |>
  mutate(Latitude = gsub("° N", "", as.character(Latitude)),
         Longitude = gsub("° W", "", as.character(Longitude))) %>%
  mutate(Latitude = as.numeric(Latitude),
         Longitude = as.numeric(Longitude))
```

```{r exporting join_fixed}
write_xlsx(final_joined, "output/cleaned/cleanedBoth/combined_Coordinates_Quality.xlsx")
```

```{r @@}
final_joined %>%
  distinct(year, loc, loccode, Latitude, Longitude) %>%
  rename(lon = Longitude,
         lat = Latitude) %>%
  arrange(loc, year) %>%
  mutate(lon = lon*-1) %>%
  write_csv("../data/daymet/index.csv")
```

# TESTERS
```{r testers}
join_fixed %>%
  filter(loc=="Kings County, CA") %>% # yr 86 Saint Jo, TX is spelled Saint Joseph, TX 
  dplyr::select(year, loc, loccode, Latitude, Longitude) %>% View()# (which was confused with Saint Joseph, LA)

df_c %>%
  filter(loc=="Auburn, AL") %>%
  dplyr::select(year, loc,Latitude, Longitude) %>% View()

df_q_w %>%
  filter(loccode==2) %>%
  dplyr::select(year, loc, loccode) %>% View()

join_fixed %>% # COLL-STA-1, COLL-STA, COLL-STA-I all match College Station loccode
  filter(loc=="College station") %>%
  dplyr::select(loc, Latitude, Longitude, loccode)

```

```{r}
# check to see if year values are the same
unique_values_dfc <- setdiff(unique(df_c$year), unique(df_q$yr))

# Get unique values in 'column_name' from df2 that are not in df1
unique_values_dfq <- setdiff(unique(df_q$yr), unique(df_c$year))

# Check if there are any unique values in either data frame
if (length(unique_values_dfc) > 0 || length(unique_values_dfq) > 0) {
  cat("There are unique values in the column 'column_name' between the two data frames.\n")
} else {
  cat("The column 'column_name' has the same values in both data frames.\n")
}

df_q %>%
  filter(yr == 2020)
```

