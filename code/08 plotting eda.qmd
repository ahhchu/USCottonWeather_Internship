# setup ##########################

```{r}
library(tidyverse)
library(readxl)
library(janitor)
library(sf)
library(stringr)
library(readr)
library(dplyr)
library(ggplot2)
library(USAboundaries)
library(USAboundariesData)
library(magrittr)
```

# Loading Data #############
```{r}
coords <- read_csv("output/cleaned/cleanedBoth/combined_Coordinates_Quality.csv")
```

# Wrangling
```{r}
coords_w <- coords %>%
  # Standardizing names
  #clean_names() %>%
  # Select target columns  
  select(year, regcode, loc, loccode, varcode, Latitude, Longitude) %>%
  mutate(Latitude = gsub("° N", "", as.character(Latitude)),
         Longitude = gsub("° W", "", as.character(Longitude))) %>%
  mutate(Latitude = as.numeric(Latitude),
         Longitude = as.numeric(Longitude))

## View entire decimal value  ########
 options(digits =6)

## Transform into geospatial object #################
# remove NA and * -1 
  test <- coords_w |>
    drop_na(Latitude, Longitude) |> 
    mutate(Longitude = Longitude *-1)
  
   # Transform into numeric
  coords_w$Latitude <- as.numeric(coords_w$Latitude)
  coords_w$Longitude <- as.numeric(coords_w$Longitude)

  # To see the entire value and not just rounded format 
  options(digits =6)
  #print(as.data.frame(coords_w[30:45, ])) # these rows show values that had N/W
  
  # Transform into geospatial object
  coords_w
```

# EDA
```{r}
# Will check data with tabular summaries and graphs. - `summary()` - `ggplot()`
states_contemporary <- us_states()

# save plot to coord_plot object 
coord_plot <- ggplot()+
  geom_point(data = test, aes(x = Longitude, y = Latitude))+
  geom_sf(data = states_contemporary, fill = NA)

coord_plot  
```

# Plot to file 

```{r}
# use ggsave() (svg, png, pdf)
  ggsave(path = "../figs", "coords_plot.png", plot=coord_plot) 
```

